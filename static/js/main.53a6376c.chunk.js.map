{"version":3,"sources":["api/api.js","context/AppReducer.js","context/state.js","components/Added.js","components/CardInfo.js","components/Header.js","components/Card.js","components/ControlPanel.js","components/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["URL","get","endpoint","params","queryParams","URLSearchParams","api_key","toString","axios","then","res","data","getPopularMovies","getGenres","getMoviesList","AppReducer","state","action","type","movieList","payload","filter","movie","id","initialState","GlobalContext","createContext","Added","genre","React","useContext","removeMovie","className","map","elem","index","title","genre_ids","poster_path","src","alt","onClick","CardInfo","movies","useState","recommendationsMovies","setRecommendationsMovies","useParams","addMovieToList","movieListDisable","find","o","useEffect","window","scrollTo","getRecommendationsMovie","results","card","style","textAlign","margin","disabled","release_date","display","flexWrap","marginLeft","overview","vote_average","width","height","padding","Header","to","Card","img","ControlPanel","query","onChange","nextPage","prevPage","placeholder","value","MovieList","localStorage","getItem","JSON","parse","App","setMovies","totalPages","setTotalPages","pageNumber","setPageNumber","setQuery","setGenre","useReducer","dispatch","setItem","stringify","total_pages","Object","fromEntries","genres","name","debounceUpdateMovies","useMemo","debounce","length","Provider","added","exact","path","page","e","preventDefault","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53a6376c.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const get = (endpoint) => (params) => {\r\n  const queryParams = new URLSearchParams({\r\n    ...params,\r\n    api_key: \"0ab346b765ddcf3489e15848e91862c8\",\r\n  }).toString();\r\n\r\n  return axios.get(`${URL}${endpoint}?${queryParams}`).then((res) => res.data);\r\n};\r\n\r\nexport const getPopularMovies = get(\"/movie/popular\");\r\n\r\nexport const getGenres = get(\"/genre/movie/list\");\r\n\r\nexport const getMoviesList = get(\"/search/movie\");\r\n\r\nexport const getRecommendationsMovie = (id) => {\r\n  return axios\r\n    .get(\r\n      `${URL}/movie/${id}/recommendations?api_key=0ab346b765ddcf3489e15848e91862c8&language=en-US&page=1`\r\n    )\r\n    .then((res) => res.data);\r\n};\r\n"," const AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_MOVIE_TO_LIST\":\r\n      return {\r\n        ...state,\r\n        movieList: [action.payload, ...state.movieList],\r\n      };\r\n    case \"REMOVE_MOVIE\":\r\n      return {\r\n        ...state,\r\n        movieList: state.movieList.filter(\r\n          (movie) => movie.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AppReducer;","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  movieList: [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"movieList\", JSON.stringify(state.movieList));\r\n  }, [state]);\r\n  const addMovieToList = (movie) => {\r\n    console.log(\"ADD_MOVIE_TO_LIST\");\r\n    dispatch({ type: \"ADD_MOVIE_TO_LIST\", payload: movie });\r\n  };\r\n  const removeMovie = (id) => {\r\n    dispatch({ type: \"REMOVE_MOVIE\", payload: id });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        movieList: state.movieList,\r\n        added: state.added,\r\n        addMovieToList,\r\n        removeMovie,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GlobalContext } from \"../context/state\";\r\n\r\nexport const Added = ({ genre }) => {\r\n  const { removeMovie, movieList } = React.useContext(GlobalContext);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {movieList.map((elem, index) => {\r\n        return (\r\n          <div key={index} className=\"card\">\r\n            <h4>{elem.title}</h4>\r\n            <div className=\"genres\">\r\n              {elem.genre_ids.map((id) => (\r\n                <span key={id}>{genre[id]}</span>\r\n              ))}\r\n            </div>\r\n            <div className=\"image\">\r\n              {elem.poster_path ? (\r\n                <img\r\n                  src={\"https://image.tmdb.org/t/p/w200\" + elem.poster_path}\r\n                  alt=\"poster\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS77eBijOyeLSZcsTopPrTvkMjTJVNpF44iA&usqp=CAU\"\r\n                  alt=\"poster\"\r\n                />\r\n              )}\r\n              <button\r\n                onClick={() => removeMovie(elem.id)}\r\n                className=\"removeButton\"\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../context/state\";\r\nimport { getRecommendationsMovie } from \"../api/api\";\r\n\r\nexport const CardInfo = ({ movies, genre }) => {\r\n  const [recommendationsMovies, setRecommendationsMovies] = React.useState([]);\r\n\r\n  const { id } = useParams();\r\n  const { addMovieToList, movieList } = React.useContext(GlobalContext);\r\n\r\n  let storedMovie = movieList.find((o) => o.id === +id);\r\n  const movieListDisable = storedMovie ? true : false;\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    getRecommendationsMovie(id).then((data) => {\r\n      setRecommendationsMovies(data.results);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {movies\r\n        .filter((card) => card.id === +id)\r\n        .map((card, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <h1 style={{ textAlign: \"center\", margin: \"50px 0\" }}>\r\n                {card.title}\r\n              </h1>\r\n              <div className=\"infoWrapper\">\r\n                <div className=\"infoImage\">\r\n                  {card.poster_path ? (\r\n                    <img\r\n                      src={\"https://image.tmdb.org/t/p/w200\" + card.poster_path}\r\n                      alt=\"poster\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS77eBijOyeLSZcsTopPrTvkMjTJVNpF44iA&usqp=CAU\"\r\n                      alt=\"poster\"\r\n                    />\r\n                  )}\r\n                  <button\r\n                    disabled={movieListDisable}\r\n                    onClick={() => addMovieToList(card)}\r\n                  >\r\n                    {movieListDisable ? \"Added\" : \"Add\"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"infoDetails\">\r\n                  <span className=\"release\">\r\n                    <b>Release at : </b>\r\n                    {card.release_date}\r\n                  </span>\r\n                  <hr />\r\n                  <span style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    <b>Genre : </b>\r\n                    {card.genre_ids.map((id) => (\r\n                      <span style={{ marginLeft: \"10px\" }} key={id}>\r\n                        {genre[id]}\r\n                      </span>\r\n                    ))}\r\n                  </span>\r\n                  <hr />\r\n                  <span>\r\n                    <b>Description : </b>\r\n                    {card.overview}\r\n                  </span>\r\n                  <hr />\r\n                  <span>\r\n                    <b>Rating : </b>\r\n                    {card.vote_average}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\", margin: \"200px 0 100px\" }}>\r\n          Recommendation movies\r\n        </h2>\r\n        <div className=\"wrapper\">\r\n          {recommendationsMovies.map((elem, index) => {\r\n            return (\r\n              <div key={index} className=\"card\">\r\n                <h4>{elem.title}</h4>\r\n                <span className=\"genres\">\r\n                  {elem.genre_ids.map((id) => (\r\n                    <span style={{ marginLeft: \"10px\" }} key={id}>\r\n                      {genre[id]}\r\n                    </span>\r\n                  ))}\r\n                </span>\r\n                <div>\r\n                  {elem.poster_path ? (\r\n                    <img\r\n                      style={{ width: \"98%\", height: \"310px\", padding: \"3px\" }}\r\n                      src={\"https://image.tmdb.org/t/p/w300\" + elem.poster_path}\r\n                      alt=\"poster\"\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      style={{ width: \"98%\", height: \"310px\", padding: \"3px\" }}\r\n                      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS77eBijOyeLSZcsTopPrTvkMjTJVNpF44iA&usqp=CAU\"\r\n                      alt=\"poster\"\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className=\"headerBackground\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"link\">\r\n          <NavLink to=\"/\">Luco TV</NavLink>\r\n        </div>\r\n        <div className=\"link\">\r\n          <NavLink to=\"/added\">Added Movies</NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../context/state\";\r\n\r\nexport const Card = ({title, id, img, genre, movies, genre_ids }) => {\r\n  const { addMovieToList, movieList } = useContext(GlobalContext);\r\n\r\n  let storedMovie = movieList.find((o) => o.id === movies.id);\r\n  const movieListDisable = storedMovie ? true : false;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <h4>{title}</h4>\r\n        <div className=\"genres\">\r\n        {genre_ids.map(id => <span key={id}>{genre[id]}</span>)}\r\n        </div>\r\n        <div>\r\n          <div className=\"image\">\r\n            {img ? (\r\n              <img src={\"https://image.tmdb.org/t/p/w200\" + img} alt=\"poster\" />\r\n            ) : (\r\n              <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS77eBijOyeLSZcsTopPrTvkMjTJVNpF44iA&usqp=CAU\"\r\n                alt=\"poster\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"cardButtons\">\r\n            <button\r\n              disabled={movieListDisable}\r\n              onClick={() => addMovieToList(movies)}\r\n            >\r\n              {movieListDisable ? \"Added\" : \"Add\"}\r\n            </button>\r\n            <NavLink to={`/info/${id}`}>Info</NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst ControlPanel = ({ query, onChange, nextPage, prevPage }) => {\r\n  return (\r\n    <div className=\"controlPanel\">\r\n      <button onClick={prevPage}>Prev Page</button>\r\n      <input\r\n        placeholder=\"  Search...\"\r\n        value={query}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n      />\r\n      <button onClick={nextPage}>Next Page</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n","import React from \"react\";\r\nimport { Card } from \"./Card\";\r\nimport ControlPanel from \"./ControlPanel\";\r\n\r\nexport const MovieList = ({\r\n  movies,\r\n  genre,\r\n  query,\r\n  onChange,\r\n  nextPage,\r\n  prevPage,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ControlPanel\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n        query={query}\r\n        onChange={onChange}\r\n      />\r\n      <div className=\"wrapper\">\r\n        {movies.map((elem) => {\r\n          return (    \r\n            <Card\r\n              id={elem.id}\r\n              key={elem.id}\r\n              title={elem.title}\r\n              img={elem.poster_path}\r\n              genre={genre}\r\n              movies={elem}\r\n              genre_ids={elem.genre_ids}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { debounce } from \"lodash\";\nimport { getMoviesList, getPopularMovies, getGenres } from \"./api/api\";\nimport \"./App.css\";\nimport { Added } from \"./components/Added\";\nimport { CardInfo } from \"./components/CardInfo\";\nimport { Header } from \"./components/Header\";\nimport { MovieList } from \"./components/MovieList\";\nimport { GlobalContext } from \"./context/state\";\nimport AppReducer from \"../src/context/AppReducer\";\n\nconst initialState = {\n  movieList: localStorage.getItem(\"movieList\")\n    ? JSON.parse(localStorage.getItem(\"movieList\"))\n    : [],\n};\n\nconst App = () => {\n  const [movies, setMovies] = React.useState([]);\n  const [totalPages, setTotalPages] = React.useState(null);\n  const [pageNumber, setPageNumber] = React.useState(1);\n  const [query, setQuery] = React.useState(\"\");\n  const [genre, setGenre] = React.useState([]);\n\n  const [state, dispatch] = React.useReducer(AppReducer, initialState);\n\n  React.useEffect(() => {\n    localStorage.setItem(\"movieList\", JSON.stringify(state.movieList));\n  }, [state]);\n\n  const addMovieToList = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_LIST\", payload: movie });\n  };\n\n  const removeMovie = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE\", payload: id });\n  };\n\n  React.useEffect(() => {\n    getPopularMovies().then((data) => {\n      setMovies(data.results);\n      setTotalPages(data.total_pages);\n    });\n    getGenres().then((data) => {\n      setGenre(\n        Object.fromEntries(data.genres.map(({ id, name }) => [id, name]))\n      );\n    });\n  }, []);\n\n  const debounceUpdateMovies = React.useMemo(\n    () =>\n      debounce((query, pageNumber) => {\n        if (query.length > 0) {\n          getMoviesList({ query, pageNumber }).then((data) => {\n            setMovies(data.results);\n            setTotalPages(data.total_pages);\n          });\n        } else {\n          getPopularMovies({ pageNumber }).then((data) => {\n            setMovies(data.results);\n            setTotalPages(data.total_pages);\n          });\n        }\n      }, 300),\n    []\n  );\n\n  const onChange = (e) => {\n    e.preventDefault();\n    debounceUpdateMovies(e.target.value, pageNumber)\n    setQuery(e.target.value);\n  };\n\n  const nextPage = () => {\n    if (query.length > 0 && pageNumber < totalPages) {\n      setPageNumber(pageNumber + 1);\n      getMoviesList({ page: pageNumber + 1, query: query }).then((data) => {\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n      });\n    } else if (query.length === 0 && pageNumber < totalPages) {\n      setPageNumber(pageNumber + 1);\n      getPopularMovies({ page: pageNumber + 1, query: query }).then((data) => {\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n      });\n    }\n  };\n\n  const prevPage = () => {\n    if (query.length > 0 && pageNumber > 1) {\n      setPageNumber(pageNumber - 1);\n      getMoviesList({ page: pageNumber - 1, query: query }).then((data) => {\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n      });\n    } else if (query.length === 0 && pageNumber > 1) {\n      setPageNumber(pageNumber - 1);\n      getPopularMovies({ page: pageNumber - 1, query: query }).then((data) => {\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n      });\n    }\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        movieList: state.movieList,\n        added: state.added,\n        addMovieToList,\n        removeMovie,\n      }}\n    >\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <MovieList\n              movies={movies}\n              genre={genre}\n              prevPage={prevPage}\n              nextPage={nextPage}\n              query={query}\n              onChange={onChange}\n            />\n          </Route>\n          <Route path=\"/added\">\n            <Added genre={genre} />\n          </Route>\n          <Route path=\"/info/:id\">\n            <CardInfo movies={movies} genre={genre} />\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}